(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{266:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"监听组件生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监听组件生命周期"}},[t._v("#")]),t._v(" 监听组件生命周期")]),t._v(" "),a("p",[t._v("父组件Parent和子组件Child，如果父组件监听到子组件挂载mounted就做一些逻辑处理，常规的写法可能如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// Parent.vue\n<Child @mounted="doSomething"/>\n\n// Child.vue\nmounted() {\n  this.$emit("mounted");\n}\n')])])]),a("p",[t._v("子组件不需要任何处理，只需要在父组件引用的时候通过@hook来监听即可，代码重写如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<Child @hook:mounted="doSomething"/>\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);