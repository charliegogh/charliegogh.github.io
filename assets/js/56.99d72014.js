(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{256:function(e,t,n){"use strict";n.r(t);var o=n(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("1.场景:如页面需要导入多个组件,原始写法:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import titleCom from '@/components/home/titleCom'\nimport bannerCom from '@/components/home/bannerCom'\nimport cellCom from '@/components/home/cellCom'\ncomponents:{titleCom,bannerCom,cellCom}\n")])])]),n("p",[e._v("2.这样就写了大量重复的代码,利用 require.context 可以写成")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const path = require('path')\nconst files = require.context('@/components/home', false, /\\.vue$/)\nconst modules = {}\nfiles.keys().forEach(key => {\n  const name = path.basename(key, '.vue')\n  modules[name] = files(key).default || files(key)\n})\ncomponents:modules\n")])])]),n("p",[e._v("3.API 方法")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("实际上是 webpack 的方法,vue 工程一般基于 webpack,所以可以使用\nrequire.context(directory,useSubdirectories,regExp)\n接收三个参数:\ndirectory：说明需要检索的目录\nuseSubdirectories：是否检索子目录\nregExp: 匹配文件的正则表达式,一般是文件名\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);