(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{208:function(t,a,e){"use strict";e.r(a);var s=e(0),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue面试题汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue面试题汇总"}},[t._v("#")]),t._v(" vue面试题汇总")]),t._v(" "),e("h2",{attrs:{id:"class-与-style-如何动态绑定？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-与-style-如何动态绑定？"}},[t._v("#")]),t._v(" Class 与 Style 如何动态绑定？")]),t._v(" "),e("h2",{attrs:{id:"class和style的几种表达方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class和style的几种表达方式"}},[t._v("#")]),t._v(" class和style的几种表达方式")]),t._v(" "),e("blockquote",[e("p",[t._v("class和style的几种表达方式")])]),t._v(" "),e("p",[t._v(":class 绑定变量 绑定对象 绑定一个数组 绑定三元表达式\n:style 绑定变量 绑定对象 绑定函数返回值 绑定三元表达式")]),t._v(" "),e("h2",{attrs:{id:"mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),e("ol",[e("li",[t._v("全称： Model-View-ViewModel")])]),t._v(" "),e("h2",{attrs:{id:"nexttick的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick的原理"}},[t._v("#")]),t._v(" nextTick的原理")]),t._v(" "),e("p",[t._v("[用法]在下次DOM更新循环之后执行延迟回调,在修改数据后立即使用该方法,获取更新后的DOM\n"),e("a",{attrs:{href:"https://github.com/haizlin/fe-interview/issues/363",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细链接"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"style加scoped属性的用途和原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#style加scoped属性的用途和原理"}},[t._v("#")]),t._v(" style加scoped属性的用途和原理")]),t._v(" "),e("p",[t._v("在标签上绑定了自定义属性,防止css全局污染\n在使用ui框架时如果加scope不会被覆盖,在使用预编译的前提下可以在最外层用id包裹")]),t._v(" "),e("h2",{attrs:{id:"template有什么用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#template有什么用"}},[t._v("#")]),t._v(" template有什么用")]),t._v(" "),e("p",[t._v("当做一个不可见的包裹元素，减少不必要的DOM元素，整个结构会更加清晰。")]),t._v(" "),e("h2",{attrs:{id:"v-show-与-v-if-有什么区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-show-与-v-if-有什么区别？"}},[t._v("#")]),t._v(" v-show 与 v-if 有什么区别？")]),t._v(" "),e("p",[t._v("v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；\n也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。"),e("br"),t._v("\nv-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。\n所以，v-if 适用于在运行时很少改变条件，不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景。")]),t._v(" "),e("h2",{attrs:{id:"vue-observable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-observable"}},[t._v("#")]),t._v(" Vue.observable")]),t._v(" "),e("p",[t._v("类轻量级vuex，用作状态管理。")]),t._v(" "),e("h2",{attrs:{id:"vue中使用this注意点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中使用this注意点"}},[t._v("#")]),t._v(" vue中使用this注意点")]),t._v(" "),e("h2",{attrs:{id:"vue渲染模板时怎么保留模板中的html注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue渲染模板时怎么保留模板中的html注释"}},[t._v("#")]),t._v(" vue渲染模板时怎么保留模板中的HTML注释")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template comments>\n  ...\n</template>\n")])])]),e("h2",{attrs:{id:"watch的属性用箭头函数定义结果会怎么样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watch的属性用箭头函数定义结果会怎么样"}},[t._v("#")]),t._v(" watch的属性用箭头函数定义结果会怎么样")]),t._v(" "),e("p",[t._v("[vue] watch的属性用箭头函数定义结果会怎么样？\nthis为undefined\n因为箭头函数默绑定父级作用域的上下文，所以不会绑定vue实例，所以 this 是undefind")]),t._v(" "),e("h2",{attrs:{id:"在vue项目中如何配置favicon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vue项目中如何配置favicon"}},[t._v("#")]),t._v(" 在vue项目中如何配置favicon")]),t._v(" "),e("p",[t._v("html模版加入meta标签，引入favicon")]),t._v(" "),e("h2",{attrs:{id:"如何实现强制刷新组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何实现强制刷新组件"}},[t._v("#")]),t._v(" 如何实现强制刷新组件")]),t._v(" "),e("h2",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("h2",{attrs:{id:"说说你对-spa-单页面的理解，它的优缺点分别是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对-spa-单页面的理解，它的优缺点分别是什么？"}},[t._v("#")]),t._v(" 说说你对 SPA 单页面的理解，它的优缺点分别是什么？")]),t._v(" "),e("p",[t._v("SPA（ single-page application ）仅在 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户的交互，避免页面的重新加载。")]),t._v(" "),e("blockquote",[e("p",[t._v("优点：")])]),t._v(" "),e("ul",[e("li",[t._v("用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；")]),t._v(" "),e("li",[t._v("基于上面一点，SPA 相对对服务器压力小；")]),t._v(" "),e("li",[t._v("前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理；")])]),t._v(" "),e("blockquote",[e("p",[t._v("缺点：")])]),t._v(" "),e("ul",[e("li",[t._v("初次加载耗时多：为实现单页 Web 应用功能及显示效果，需要在加载页面的时候将 JavaScript、CSS 统一加载，部分页面按需加载；")]),t._v(" "),e("li",[t._v("前进后退路由管理：由于单页应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理；")]),t._v(" "),e("li",[t._v("SEO 难度较大：由于所有的内容都在一个页面中动态替换显示，所以在 SEO 上其有着天然的弱势。")])]),t._v(" "),e("h3",{attrs:{id:"vue-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),e("ol",[e("li",[t._v("vue-router怎么重定向页面？\nredirect属性")]),t._v(" "),e("li",[t._v("404页面配置")])])])}),[],!1,null,null,null);a.default=v.exports}}]);